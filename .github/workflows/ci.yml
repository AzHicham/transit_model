name: Continuous Integration
on: [push, pull_request]

env:
  PROJ_VERSION: 7.1.0

jobs:
  rustfmt:
    name: Formatting check
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest
    steps:
    - uses: actions/checkout@master
    - name: Check formatting
      run: make format

  clippy:
    name: Analyzing code with Clippy
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj
    steps:
    - uses: actions/checkout@master
    - name: Linting
      run: make lint

  audit:
    name: Audits
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj
    steps:
    - uses: actions/checkout@v1
    - name: Security audit
      uses: actions-rs/audit-check@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  tests:
    name: Tests
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj
    steps:
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install xmllint
      run: apt update && apt install --yes libxml2-utils
    - name: Run tests with and without features
      run: make test

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj
    steps:
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install xmllint
      run: apt update && apt install --yes libxml2-utils pkg-config libssl-dev
    - name: Install `cargo-tarpaulin`
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-tarpaulin
    - name: Run tests for coverage
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
        args: --all-features --all-targets --workspace --count --out Xml --run-types AllTargets
    - name: Codecov upload
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
